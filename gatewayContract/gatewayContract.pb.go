// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gatewayContract.proto

/*
Package gatewayContract is a generated protocol buffer package.

It is generated from these files:
	gatewayContract.proto

It has these top-level messages:
	HelloRequest
	HelloReply
*/
package gatewayContract

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type HelloRequest struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Id   int32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *HelloRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// The response message containing the greetings
type HelloReply struct {
	Response string `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloReply) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "gatewayContract.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "gatewayContract.HelloReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Greeter service

type GreeterClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (Greeter_SayHelloClient, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (Greeter_SayHelloClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Greeter_serviceDesc.Streams[0], c.cc, "/gatewayContract.Greeter/SayHello", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterSayHelloClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Greeter_SayHelloClient interface {
	Recv() (*HelloReply, error)
	grpc.ClientStream
}

type greeterSayHelloClient struct {
	grpc.ClientStream
}

func (x *greeterSayHelloClient) Recv() (*HelloReply, error) {
	m := new(HelloReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Greeter service

type GreeterServer interface {
	// Sends a greeting
	SayHello(*HelloRequest, Greeter_SayHelloServer) error
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HelloRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServer).SayHello(m, &greeterSayHelloServer{stream})
}

type Greeter_SayHelloServer interface {
	Send(*HelloReply) error
	grpc.ServerStream
}

type greeterSayHelloServer struct {
	grpc.ServerStream
}

func (x *greeterSayHelloServer) Send(m *HelloReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gatewayContract.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SayHello",
			Handler:       _Greeter_SayHello_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "gatewayContract.proto",
}

func init() { proto.RegisterFile("gatewayContract.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0x4f, 0x2c, 0x49,
	0x2d, 0x4f, 0xac, 0x74, 0xce, 0xcf, 0x2b, 0x29, 0x4a, 0x4c, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x47, 0x13, 0x56, 0x32, 0xe2, 0xe2, 0xf1, 0x48, 0xcd, 0xc9, 0xc9, 0x0f, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0x29, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x98, 0x14, 0x18,
	0x35, 0x58, 0x83, 0x98, 0x32, 0x53, 0x94, 0x34, 0xb8, 0xb8, 0xa0, 0x7a, 0x0a, 0x72, 0x2a, 0x85,
	0xa4, 0xb8, 0x38, 0x8a, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x61, 0xba, 0xe0, 0x7c, 0xa3, 0x50,
	0x2e, 0x76, 0xf7, 0xa2, 0xd4, 0xd4, 0x92, 0xd4, 0x22, 0x21, 0x2f, 0x2e, 0x8e, 0xe0, 0xc4, 0x4a,
	0xb0, 0x3e, 0x21, 0x59, 0x3d, 0x74, 0xd7, 0x21, 0xbb, 0x41, 0x4a, 0x1a, 0x97, 0x74, 0x41, 0x4e,
	0xa5, 0x12, 0x83, 0x01, 0xa3, 0x93, 0x19, 0x97, 0x74, 0x66, 0xbe, 0x5e, 0x7a, 0x51, 0x41, 0xb2,
	0x5e, 0x6a, 0x45, 0x62, 0x6e, 0x41, 0x4e, 0x6a, 0xb1, 0x5e, 0x06, 0x48, 0x49, 0x79, 0x7e, 0x51,
	0x4e, 0x8a, 0x13, 0x3f, 0x58, 0x79, 0x38, 0x88, 0x1d, 0x00, 0xf2, 0x75, 0x00, 0xe3, 0x22, 0x26,
	0x66, 0x0f, 0x9f, 0xf0, 0x24, 0x36, 0x70, 0x20, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc5,
	0x1d, 0xf3, 0xea, 0x1d, 0x01, 0x00, 0x00,
}
